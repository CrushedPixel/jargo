TODO:
- fix internal server error if user filters by invalid value
- support for included values
- in the meantime, return 400 if include parameter is set
- proper logging
- automatically create indices for sortable fields to improve pagination speed
- more thorough unit testing
- prevent has/has relations as they can't be modeled in the database
- add support for many2many relations

Gotchas:
- only int64 ids are supported
- panicking in handler functions is allowed and handled
- inclusion of related resources is not possible (yet)

Ideas:
- add websocket support, mirroring all REST endpoints and adding PubSub capabilities
- cache select query results in the context, making subsequent queries for the same resource
  without a resource altering query between them return a cached result.
  the default show/index handlers should use this cache, avoiding duplicate queries
  if the library user e.g. does some access validation requiring the model in a middleware.